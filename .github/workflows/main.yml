# This workflow will build a mulesoft project and deploy to Cloudhub

name: Build and Deploy to Sandbox

on:
  push:
    branches: [main]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Save state
      run: echo "::save-state name={name}::{value}"

    - name: Set output
      run: echo "::set-output name={name}::{value}"
          
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: 1.8
        
    - name: Add repo credentials
      uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: |
          [{
            "id": "mule-enterprise",
            "username": "${{ secrets.mule_nexus_username }}",
            "password": "${{ secrets.mule_nexus_password }}"
          }]
            
    - name: print effective-settings (optional)
      run: mvn help:effective-settings
        
    - name: build with maven
      run: mvn -B package --file pom.xml
          
    - name: stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
            
    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
      
  deploy:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
        
      - uses: actions/download-artifacts@v3
        with:
          name: artifacts
        
      - name: Deploy to Sandbox
        env:
          USERNAME: ${{ secrets.anypoint_cicd_username }}
          PASSWORD: ${{ secrets.anypoint_cicd_password }}
          DECRYPTION_key: ${{ secrets.decryption_key}}
        run: |
          artifactName: $(ls *.jar | head -1)
          mvn deploy -DmuleDeploy -e \
          -Dmule.artifacts=$artifactName \
          -Danypoint.username="$USERNAME" \
          -Danypoint.password="$PASSWORD" \
          -Denv=Sandbox \
          -Ddecryption.key="$DECRYPTION_KEY" \
          -DskipTests
